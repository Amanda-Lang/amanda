# Este módulo contém as declarações de funções que já vêm com a linguagem
# E estão disponíveis em todos os programas


# Funções de entrada functions
func nativa leia(mensagem: texto): texto
func nativa leia_int(mensagem: texto): int
func nativa leia_real(mensagem: texto): real


# Funções de saída

func nativa escreva(item: indef)
func nativa escrevaln(item: indef)

# Para colecções
func nativa vec(tipo: indef, tam: int): indef
func nativa tam(seq: indef): int
func nativa anexa(vec: indef, valor: indef)
func nativa remova(vec: indef, indice: int): indef


# 'Metaprogramação'
#func nativa tipo(objecto: indef):texto



# Funções para trabalhar com texto
func nativa txt_contem(palheiro: texto, agulha: texto): bool

#Funções e constantes matemáticas
PI: real
func nativa abs(valor: real): real
func nativa expoente(x: real, y: real): real
func nativa raizqd(valor: real): real
func nativa arredonda(valor: real): int
func nativa piso(valor: real): int
func nativa teto(valor: real): int
func nativa sen(valor: real): real
func nativa cos(valor: real): real
func nativa tan(valor: real): real
func nativa log(valor: real, base: real): real
func nativa grausprad(valor: real): real
func nativa radpgraus(valor: real): real


@embutido(item = "Opcao")
registo Opcao[T]
   valor: T
fim

@embutido
met[T] Opcao[T]::valor_ou(alvo, padrao: T): T fim

