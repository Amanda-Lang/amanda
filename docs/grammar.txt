<program> := <instruction>

<op> := PLUS | MINUS | STAR | SLASH | MODULO

<instruction> := <declarations> SEMI <instruction> | <assignments> SEMI <instruction>
| <expression> SEMI <instruction> | EMPTY

<factor> := INTEGER | DECIMAL | IDENTIFIER | MINUS <factor> | PLUS <factor>

<expression> := <factor> <expression_1> | LPAR <expression> RPAR <expression_1>

<plus_or_minus> := PLUS | MINUS

<multi_op> := STAR | SLASH | MODULO

<operand> := INTEGER | DECIMAL | IDENTIFIER

<expression_1> := <plus_or_minus> <factor_2> | <multi_op> <expression> <expression_1>
| <operand>  <expression_1> | EMPTY

<factor_2> :=  <factor>  <expression_1> | <expression> <expression_1>

<parameter> := INTEGER | DECIMAL | STRING | IDENTIFIER | <expression>

<actual_parameter_section> := <parameter> {,<parameter>}

<function_call> := identifier LPAR <actual_parameter_section> RPAR SEMI

<declarations> := DECL IDENTIFIER IDENTIFIER

<assignments> := IDENTIFIER EQUAL <term>  | IDENTIFIER EQUAL STRING | IDENTIFIER EQUAL <expression>
