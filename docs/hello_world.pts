$* this is
a multiline comment *$
$* these are the different types:
 int,real,bool,texto *$
$ The two bool types
decl texto l = "verdadeiro";
decl texto a = "falso";
decl bool is_father = verdadeiro;


$ var a: int = 2;
l=a="teste";
$ A string
decl texto nome = "Stenio";
a=l;
$ This is a variable declaration
declara int antonio;
$ or short form
decl int b;



decl real salario = 2;
$ this is an array
vector int vet[3];
$ Access element
b recebe vet[2];

b recebe vet[3+4];
$ this is an assignment
a recebe '10';

b = b+b;
b = --2-5;
$ or short form
b = 90 + 10;

$ Expressions
$ b recebe (2+a)*b; $ Don't forget the semi!!!!!
$ b = b*2;



{
  decl int b;
  decl int a;

  def test_scope():int{
    retorna 2+1;
  }
}



$ function declarations
defina soma(bool a,int b): real{

  decl int ab;
  decl real angola;

  se (1 ==1 )
    retorna ab;
  senao
    retorna 2.0;
}



decl real resultado = 2.0 + soma(verdadeiro,2);

$ or for 'procedure'
defina divisao(texto a,int b): vazio{

  vector int tem[3];
  mostra 3/b;
}


$ or short form
def divisao2(int a,int b): int{
  vector int tem[3];
  mostra a/b;
  retorna a/b;
}


se (1>2)
  mostra "maior";
senao {
  soma(verdadeiro,1);
  mostra a;

}

enquanto (1==1) {
  declara int a;
  decl texto random;
}


para (i de 0..9) faca {
  declara int a;
  decl texto random;
}


para (i de 0..1 inc -1) faca
  mostra i;


$ Function call
mostra soma(1>2,2+2);
divisao("1",b);
